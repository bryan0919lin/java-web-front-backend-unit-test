/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

plugins {
    id "com.moowork.node" version "1.3.1"
}

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'war'

apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'

apply plugin: 'jacoco'

ext {
    springVersion = "5.1.6.RELEASE"
    hibernateVersion = "5.2.12.Final"
    jacksonVersion = "2.9.8"
}

project.ext {
    // karma-chrome-launcher is used for debug, karma-phantomjs-launcher is used for normal used.
    jasmineDependencies = ['karma', 'karma-jasmine', 'karma-phantomjs-launcher', , 'karma-promise', 'karma-requirejs', 'requirejs', 'jasmine-core', 'karma-coverage']
    karmaExec = file('node_modules/karma/bin/karma')
    karmaConfig = 'karma.conf.js'
}

node {
    // Version of npm to use.
    // npmVersion = '2.1.5'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true
      
    // Set the work directory for unpacking node
    workDir = file("${project.buildDir}/nodejs")
      
    // Set the work directory for NPM
    // npmWorkDir = file("${project.buildDir}/npm")      
      
    // Set the work directory where node_modules should be located
    nodeModulesDir = file("${project.projectDir}")
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {

    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
    
    compile "org.springframework:spring-web:${springVersion}"
    compile "org.springframework:spring-webmvc:${springVersion}"
    compile "org.springframework:spring-orm:${springVersion}"
    compile "org.springframework:spring-tx:${springVersion}"

    compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${jacksonVersion}"

    compile "org.hibernate:hibernate-core:${hibernateVersion}"
    
    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.2.0'

    testCompile 'junit:junit:4.12'
    testCompile "org.springframework:spring-test:${springVersion}"
    testCompile group: 'com.h2database', name: 'h2', version: '1.4.196'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
}

task setupJasmine(type: NpmTask) {
    outputs.dir file('node_modules')
    args = ['install'] + jasmineDependencies
}

task jasmineRun(type: NodeTask, dependsOn: 'setupJasmine') {
    script = karmaExec
    args = ['start', karmaConfig, '--single-run']
}

task jasmineWatch(type: NodeTask, dependsOn: 'setupJasmine') {
    script = karmaExec
    args = ['start', karmaConfig]
}

test.dependsOn jasmineRun